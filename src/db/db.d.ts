/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> =
  T extends ColumnType<infer S, infer I, infer U>
    ? ColumnType<S, I | undefined, U>
    : ColumnType<T, T | undefined, T>;

export interface Priorities {
  id: Generated<number | null>;
  level: number;
  name: string;
}

export interface Sessions {
  id: Generated<number | null>;
  user_id: number;
  refresh_token: string;
  auth_token: string;
  auth_expires_at: string;
  refresh_expires_at: string;
  created_at: Generated<string | null>;
  updated_at: Generated<string | null>;
}

export type StatusName = "To Do" | "In Progress" | "Completed";

export interface Statuses {
  id: Generated<number | null>;
  name: StatusName;
}

export interface Tasks {
  assignee_id: number | null;
  created_at: Generated<string | null>;
  creator_id: number;
  description: string | null;
  due_date: string | null;
  id: Generated<number | null>;
  priority_id: Generated<number | null>;
  status_id: Generated<number>;
  title: string;
  updated_at: string | null;
}

export interface Users {
  created_at: Generated<string | null>;
  email: string;
  full_name: string | null;
  id: Generated<number | null>;
  password_hash: string;
  username: string;
}

export interface DB {
  priorities: Priorities;
  sessions: Sessions;
  statuses: Statuses;
  tasks: Tasks;
  users: Users;
}
